{"ast":null,"code":"var _jsxFileName = \"/home/dobromir/Documents/React/reduxstructure/src/components/singUp/signUp.js\";\nimport React, { Component } from 'react';\nimport './signUp.scss';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/alerts/alertActions';\nimport * as api from '../../utils/api';\n\nclass signUp extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const userObj = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      };\n\n      try {\n        const {\n          data\n        } = await api.signUp(userObj);\n        this.props.setAlert(data.message, 'success');\n        this.setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n        this.timer = setTimeout(() => {\n          this.props.history.push(\"/\");\n        }, 6000);\n      } catch (error) {\n        this.props.setAlert(error.response.data.message, 'danger');\n        this.setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      }\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"signUpContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Sign up and start looking for work today\"), React.createElement(\"div\", {\n      className: \"signUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"signUpForm\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"passwordConfirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"buttonDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      name: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Register\")))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nfunction mapPropsToState(dispatch) {\n  return {\n    setAlert: (msg, alertType) => {\n      dispatch(setAlert(msg, alertType));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapPropsToState)(signUp);","map":{"version":3,"sources":["/home/dobromir/Documents/React/reduxstructure/src/components/singUp/signUp.js"],"names":["React","Component","connect","setAlert","api","signUp","constructor","onSubmit","event","preventDefault","userObj","name","state","email","password","confirmPassword","data","props","message","setState","timer","setTimeout","history","push","error","response","onInputChange","target","value","componentWillUnmount","clearTimeout","render","mapStateToProps","mapPropsToState","dispatch","msg","alertType"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './signUp.scss';\nimport {connect} from 'react-redux';\nimport {setAlert} from '../../redux/alerts/alertActions';\nimport * as api from '../../utils/api';\n\nclass signUp extends Component {\n  \n  \n   \n  constructor(){\n    super();\n    this.state = {\n        name : '',\n        email : '',\n        password : '',\n        confirmPassword : ''\n    };\n  }\n\n\n  onSubmit = async (event) => {\n      event.preventDefault();\n      const userObj = {name : this.state.name,email : this.state.email,password : this.state.password,confirmPassword : this.state.confirmPassword};\n      try{\n        const {data} = await api.signUp(userObj);\n        this.props.setAlert(data.message,'success');\n        this.setState({name : '',email : '',password : '',confirmPassword : ''});\n        this.timer = setTimeout(()=>{this.props.history.push(\"/\")},6000)\n      }catch(error){\n        this.props.setAlert(error.response.data.message,'danger');\n        this.setState({name : '',email : '',password : '',confirmPassword : ''});\n      }\n  }\n\n  componentWillUnmount(){\n    if(this.timer){\n      clearTimeout(this.timer);\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({[event.target.name] : event.target.value});\n  }\n\n\n  render(){\n    return (\n      <div className=\"signUpContainer\">\n        <h2>Sign up and start looking for work today</h2>\n        <div className=\"signUp\">\n            \n            <form className=\"signUpForm\" onSubmit={this.onSubmit}>\n                    <div className=\"formGroup\">\n                      <label htmlFor=\"username\">Name</label>\n                      <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.onInputChange}/>\n                    </div>\n\n                    <div className=\"formGroup\">\n                      <label htmlFor=\"email\">Email</label>\n                      <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.onInputChange}/>\n                    </div>\n\n                    <div className=\"formGroup\">\n                      <label htmlFor=\"password\">Password</label>\n                      <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.onInputChange}/>\n                    </div>\n\n                    <div className=\"formGroup\">\n                      <label htmlFor=\"passwordConfirm\">Confirm Password</label>\n                      <input type=\"password\" name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onInputChange}/>\n                    </div>\n                    <div className=\"buttonDiv\">\n                      <button type=\"submit\" name=\"submit\">Register</button>\n                  </div>\n            </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n\n    return state;\n}\n\nfunction mapPropsToState(dispatch){\n    return{\n        setAlert : (msg,alertType) => {dispatch(setAlert(msg,alertType))}\n    }\n}\n\nexport default connect(mapStateToProps,mapPropsToState)(signUp);"]},"metadata":{},"sourceType":"module"}