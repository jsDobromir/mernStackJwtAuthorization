{"ast":null,"code":"import UserActionTypes from './userTypes';\nconst INITIAL_STATE = {\n  currentUser: null,\n  errorMessage: null,\n  isAuth: false,\n  loggedInButNotVerified: false\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    //case UserActionTypes.LOGIN_START:\n    case UserActionTypes.LOGIN_SUCCESS:\n      return { ...state,\n        loggedInButNotVerified: true\n      };\n\n    case UserActionTypes.LOGIN_FAILURE:\n      return { ...state,\n        loggedInButNotVerified: false,\n        errorMessage: action.payload\n      };\n\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return { ...state,\n        currentUser: null,\n        errorMessage: action.payload,\n        isAuth: false\n      };\n\n    case UserActionTypes.VERIFY_TOKEN_SUCCESS:\n      return { ...state,\n        currentUser: action.payload,\n        isAuth: true,\n        errorMessage: null\n      };\n\n    case UserActionTypes.VERiFY_TOKEN_ERROR:\n      return { ...state,\n        currentUser: null,\n        isAuth: false,\n        errorMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/dobromir/Documents/React/reduxstructure/src/redux/user/userReducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","errorMessage","isAuth","loggedInButNotVerified","userReducer","state","action","type","LOGIN_SUCCESS","LOGIN_FAILURE","payload","SIGN_UP_FAILURE","VERIFY_TOKEN_SUCCESS","VERiFY_TOKEN_ERROR"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAG,IADI;AAElBC,EAAAA,YAAY,EAAG,IAFG;AAGlBC,EAAAA,MAAM,EAAG,KAHS;AAIlBC,EAAAA,sBAAsB,EAAG;AAJP,CAAtB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAKT,eAAe,CAACU,aAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,sBAAsB,EAAG;AAFtB,OAAP;;AAIJ,SAAKL,eAAe,CAACW,aAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,sBAAsB,EAAG,KAFtB;AAGHF,QAAAA,YAAY,EAAGK,MAAM,CAACI;AAHnB,OAAP;;AAKJ,SAAKZ,eAAe,CAACa,eAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,WAAW,EAAG,IAFX;AAGHC,QAAAA,YAAY,EAAGK,MAAM,CAACI,OAHnB;AAIHR,QAAAA,MAAM,EAAG;AAJN,OAAP;;AAOJ,SAAKJ,eAAe,CAACc,oBAArB;AACI,aAAM,EACF,GAAGP,KADD;AAEFL,QAAAA,WAAW,EAAGM,MAAM,CAACI,OAFnB;AAGFR,QAAAA,MAAM,EAAG,IAHP;AAIFD,QAAAA,YAAY,EAAG;AAJb,OAAN;;AAMJ,SAAKH,eAAe,CAACe,kBAArB;AACI,aAAO,EACH,GAAGR,KADA;AAEHL,QAAAA,WAAW,EAAG,IAFX;AAGHE,QAAAA,MAAM,EAAG,KAHN;AAIHD,QAAAA,YAAY,EAAGK,MAAM,CAACI;AAJnB,OAAP;;AAMJ;AACI,aAAOL,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,WAAf","sourcesContent":["import UserActionTypes from './userTypes';\n\nconst INITIAL_STATE = {\n    currentUser : null,\n    errorMessage : null,\n    isAuth : false,\n    loggedInButNotVerified : false\n};\n\nconst userReducer = (state = INITIAL_STATE,action) => {\n    switch(action.type){\n        //case UserActionTypes.LOGIN_START:\n        case UserActionTypes.LOGIN_SUCCESS:\n            return {\n                ...state,\n                loggedInButNotVerified : true\n            }\n        case UserActionTypes.LOGIN_FAILURE:\n            return {\n                ...state,\n                loggedInButNotVerified : false,\n                errorMessage : action.payload\n            }\n        case UserActionTypes.SIGN_UP_FAILURE:\n            return {\n                ...state,\n                currentUser : null,\n                errorMessage : action.payload,\n                isAuth : false\n            }\n\n        case UserActionTypes.VERIFY_TOKEN_SUCCESS:\n            return{\n                ...state,\n                currentUser : action.payload,\n                isAuth : true,\n                errorMessage : null\n            }\n        case UserActionTypes.VERiFY_TOKEN_ERROR:\n            return {\n                ...state,\n                currentUser : null,\n                isAuth : false,\n                errorMessage : action.payload\n            }\n        default :\n            return state;\n    }\n};\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}