{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './userTypes';\nimport * as api from '../../utils/api';\nimport { signUpSuccess, signUpFailure, loginSuccess, loginFail, verifyTokenSuccess, verifyTokenError } from './userActions';\nimport { setAlert } from '../alerts/alertActions'; // function* signUpStart(payload){\n//     const userObj = payload.payload;\n//     try{\n//         const {data} = yield call(api.signUp,userObj);\n//         console.log(data);\n//         localStorage.setItem('userToken',data.token);\n//         yield put(signUpSuccess(data.employee));       \n//     }catch(error){\n//         console.log('error block');\n//         console.log(error.response.data.message);\n//         yield put(signUpFailure(error.response.data.message));\n//     }\n// }\n// function* onSignUpStart(){\n//     yield takeLatest(UserActionTypes.SIGN_UP_START,signUpStart);\n// }\n\nfunction* loginStart(payload) {\n  const userObj = payload.payload;\n\n  try {\n    const {\n      data\n    } = yield call(api.login, userObj);\n    const token = data.token;\n    localStorage.setItem('token', token);\n    yield put(loginSuccess());\n  } catch (error) {\n    console.log('ERROR', error.response.data.message);\n    yield put(setAlert(error.response.data.message, 'danger'));\n    yield put(loginFail(error.response.data.message));\n  }\n}\n\nfunction* ongLoginStart() {\n  yield takeLatest(UserActionTypes.LOGIN_START, loginStart);\n}\n\nfunction* verifyToken(payload) {\n  const token = payload.payload;\n\n  try {\n    const {\n      data\n    } = yield call(api.verifyToken, {\n      token\n    });\n    console.log(data);\n    const {\n      currentEmployee\n    } = data.data;\n    console.log(data.data);\n    yield put(verifyTokenSuccess(currentEmployee));\n  } catch (error) {\n    console.log(error.response.data.message);\n    yield put(verifyTokenError(error.response.data.message));\n  }\n}\n\nfunction* onTokenVerify() {\n  yield takeLatest(UserActionTypes.VERIFY_TOKEN_START, verifyToken);\n}\n\nexport function* userSagas() {\n  yield all([//call(onSignUpStart)\n  call(ongLoginStart), call(onTokenVerify)]);\n}","map":{"version":3,"sources":["/home/dobromir/Documents/React/reduxstructure/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","api","signUpSuccess","signUpFailure","loginSuccess","loginFail","verifyTokenSuccess","verifyTokenError","setAlert","loginStart","payload","userObj","data","login","token","localStorage","setItem","error","console","log","response","message","ongLoginStart","LOGIN_START","verifyToken","currentEmployee","onTokenVerify","VERIFY_TOKEN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAAQC,aAAR,EAAsBC,aAAtB,EAAqCC,YAArC,EAAmDC,SAAnD,EAA8DC,kBAA9D,EAAkFC,gBAAlF,QAAyG,eAAzG;AACA,SAAQC,QAAR,QAAuB,wBAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,UAAUC,UAAV,CAAqBC,OAArB,EAA6B;AACzB,QAAMC,OAAO,GAAGD,OAAO,CAACA,OAAxB;;AAEA,MAAG;AACC,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMb,IAAI,CAACE,GAAG,CAACY,KAAL,EAAWF,OAAX,CAAzB;AACA,UAAMG,KAAK,GAAGF,IAAI,CAACE,KAAnB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BF,KAA7B;AACA,UAAMjB,GAAG,CAACO,YAAY,EAAb,CAAT;AACH,GALD,CAKC,OAAMa,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAAK,CAACG,QAAN,CAAeR,IAAf,CAAoBS,OAAxC;AACA,UAAMxB,GAAG,CAACW,QAAQ,CAACS,KAAK,CAACG,QAAN,CAAeR,IAAf,CAAoBS,OAArB,EAA6B,QAA7B,CAAT,CAAT;AACA,UAAMxB,GAAG,CAACQ,SAAS,CAACY,KAAK,CAACG,QAAN,CAAeR,IAAf,CAAoBS,OAArB,CAAV,CAAT;AACH;AACJ;;AAED,UAAUC,aAAV,GAAyB;AACrB,QAAM1B,UAAU,CAACI,eAAe,CAACuB,WAAjB,EAA6Bd,UAA7B,CAAhB;AACH;;AAED,UAAUe,WAAV,CAAsBd,OAAtB,EAA8B;AAC1B,QAAMI,KAAK,GAAGJ,OAAO,CAACA,OAAtB;;AAEA,MAAG;AACC,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMb,IAAI,CAACE,GAAG,CAACuB,WAAL,EAAiB;AAACV,MAAAA;AAAD,KAAjB,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,UAAM;AAACa,MAAAA;AAAD,QAAoBb,IAAI,CAACA,IAA/B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACA,IAAjB;AACA,UAAMf,GAAG,CAACS,kBAAkB,CAACmB,eAAD,CAAnB,CAAT;AACH,GAND,CAMC,OAAMR,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeR,IAAf,CAAoBS,OAAhC;AACA,UAAMxB,GAAG,CAACU,gBAAgB,CAACU,KAAK,CAACG,QAAN,CAAeR,IAAf,CAAoBS,OAArB,CAAjB,CAAT;AACH;AACJ;;AAED,UAAUK,aAAV,GAAyB;AACrB,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,kBAAjB,EAAoCH,WAApC,CAAhB;AACH;;AAED,OAAO,UAAUI,SAAV,GAAqB;AACxB,QAAM9B,GAAG,CAAC,CACN;AACAC,EAAAA,IAAI,CAACuB,aAAD,CAFE,EAGNvB,IAAI,CAAC2B,aAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport UserActionTypes from './userTypes';\nimport * as api from '../../utils/api';\nimport {signUpSuccess,signUpFailure, loginSuccess, loginFail, verifyTokenSuccess, verifyTokenError} from './userActions';\nimport {setAlert} from '../alerts/alertActions';\n// function* signUpStart(payload){\n//     const userObj = payload.payload;\n//     try{\n//         const {data} = yield call(api.signUp,userObj);\n//         console.log(data);\n//         localStorage.setItem('userToken',data.token);\n//         yield put(signUpSuccess(data.employee));       \n//     }catch(error){\n//         console.log('error block');\n//         console.log(error.response.data.message);\n//         yield put(signUpFailure(error.response.data.message));\n//     }\n// }\n\n// function* onSignUpStart(){\n//     yield takeLatest(UserActionTypes.SIGN_UP_START,signUpStart);\n// }\n\nfunction* loginStart(payload){\n    const userObj = payload.payload;\n    \n    try{\n        const {data} = yield call(api.login,userObj);\n        const token = data.token;\n        localStorage.setItem('token',token);\n        yield put(loginSuccess());\n    }catch(error){\n        console.log('ERROR',error.response.data.message);\n        yield put(setAlert(error.response.data.message,'danger'));\n        yield put(loginFail(error.response.data.message));\n    }\n}\n\nfunction* ongLoginStart(){\n    yield takeLatest(UserActionTypes.LOGIN_START,loginStart);\n}\n\nfunction* verifyToken(payload){\n    const token = payload.payload;\n    \n    try{\n        const {data} = yield call(api.verifyToken,{token});\n        console.log(data);\n        const {currentEmployee} = data.data;\n        console.log(data.data);\n        yield put(verifyTokenSuccess(currentEmployee));\n    }catch(error){\n        console.log(error.response.data.message);\n        yield put(verifyTokenError(error.response.data.message));\n    }\n}\n\nfunction* onTokenVerify(){\n    yield takeLatest(UserActionTypes.VERIFY_TOKEN_START,verifyToken);\n}\n\nexport function* userSagas(){\n    yield all([\n        //call(onSignUpStart)\n        call(ongLoginStart),\n        call(onTokenVerify)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}